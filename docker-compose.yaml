# docker-compose.yaml (Final & Cleaned)
# The complete, professional monitoring stack for your blog.

networks:
  loki:

volumes:
  loki-data:
  grafana:
  prometheus:
  alertmanager-data:

services:
  # --- Application Services ---
  blog:
    build:
      context: ./src
    container_name: blog-app
    ports:
      - "8000:80"
    networks:
      - loki
    restart: unless-stopped
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-batch-size: "400"

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:1.2.0
    container_name: nginx-exporter
    command: -nginx.scrape-uri http://blog/stub_status
    networks:
      - loki
    restart: unless-stopped

  # --- Core Monitoring Services ---
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./config/loki.yaml:/etc/loki/config.yaml
      - loki-data:/loki
    command: "-config.file=/etc/loki/config.yaml"
    networks:
      - loki
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    command: "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - loki
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    command: "--config.file=/etc/alertmanager/alertmanager.yml"
    networks:
      - loki
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "13000:3000"
    volumes:
      - ./config/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana:/var/lib/grafana
    networks:
      - loki
    restart: unless-stopped
